apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: minio-setup
spec:
  results:
    - name: mc-command
      description: Command to execute in the MC image
  params:
    - name: namespace
      type: string
      description: "mynamespace -- namespace to deploy iqe pod into, usually already set by 'deploy_ephemeral_env.sh'"
    - name: pod-name
      type: string
      description: Pod name
  steps:
    - name: setup-minio-port-forward
      image: quay.io/ernesgonzalez33/bonfire:latest
      env:
        - name: NAMESPACE
          value: "$(params.namespace)"
      script: |
        set -x
        LOCAL_SVC_PORT=$(python -c 'import socket; s=socket.socket(); s.bind(("", 0)); print(s.getsockname()[1]); s.close()')
        oc_wrapper port-forward svc/env-$NAMESPACE-minio $LOCAL_SVC_PORT:9000 -n $NAMESPACE &
        echo $LOCAL_SVC_PORT > /workspace/LOCAL_SVC_PORT
        set +x
        sleep 5
    - name: get-credentials
      image: quay.io/ernesgonzalez33/bonfire:latest
      env:
        - name: NAMESPACE
          value: "$(params.namespace)"
      script: |
        # Get the secret from the env
        set -x
        oc get secret env-$NAMESPACE-minio -o json -n $NAMESPACE | jq -r '.data' > minio-creds.json
        set +x

        export LOCAL_SVC_PORT=$(cat /workspace/LOCAL_SVC_PORT)

        # Grab the needed creds from the secret
        export MINIO_ACCESS=$(jq -r .accessKey < minio-creds.json | base64 -d)
        export MINIO_SECRET_KEY=$(jq -r .secretKey < minio-creds.json | base64 -d)
        export MINIO_HOST=localhost
        export MINIO_PORT=$LOCAL_SVC_PORT

        if [ -z "$MINIO_ACCESS" ] || [ -z "$MINIO_SECRET_KEY" ] || [ -z "$MINIO_PORT" ]; then
            echo "Failed to fetch minio connection info when running 'oc' commands"
            exit 1
        fi

        # Pass variables to the next step
        echo $MINIO_ACCESS > /workspace/MINIO_ACCESS
        echo $MINIO_SECRET_KEY > /workspace/MINIO_SECRET_KEY
        echo $MINIO_HOST > /workspace/MINIO_HOST
        echo $MINIO_PORT > /workspace/MINIO_PORT
    - name: set-up-minio-client
      image: quay.io/ernesgonzalez33/bonfire:latest
      env:
        - name: POD
          value: "$(params.pod-name)"
      script: |
        # Bring the variables from the previous step
        export MINIO_ACCESS=$(cat /workspace/MINIO_ACCESS)
        export MINIO_SECRET_KEY=$(cat /workspace/MINIO_SECRET_KEY)
        export MINIO_HOST=$(cat /workspace/MINIO_HOST)
        export MINIO_PORT=$(cat /workspace/MINIO_PORT)

        # Setup the minio client to auth to the local eph minio in the ns
        echo "Fetching artifacts from minio..."

        BUCKET_NAME="${POD}-artifacts"
        CMD="mkdir -p /artifacts &&
        mc --no-color --quiet alias set minio http://${MINIO_HOST}:${MINIO_PORT} ${MINIO_ACCESS} ${MINIO_SECRET_KEY} &&
        mc --no-color --quiet mirror --overwrite minio/${BUCKET_NAME} /artifacts/
        "

